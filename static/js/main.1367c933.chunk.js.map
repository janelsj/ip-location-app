{"version":3,"sources":["API.js","App.js","reportWebVitals.js","index.js"],"names":["API","axios","create","baseURL","headers","App","useState","input","setInput","ip","setIp","capital","setCapital","country","setCountry","id","className","type","placeholder","onChange","e","target","value","required","autoFocus","onClick","preventDefault","a","get","params","then","response","data","country_capital","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQASeA,E,OARHC,EAAMC,OAAO,CACrBC,QAAS,mDACTC,QAAS,CACL,kBAAmB,2CACnB,iBAAkB,wD,eCqCXC,MAtCf,WACE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoBF,mBAAS,IAA7B,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAqBA,OAAQ,qBAAKC,GAAG,SAAR,SACN,sBAAKC,UAAU,MAAf,UACE,6DADF,qBAEoB,uBAAOC,KAAK,OAAOC,YAAa,sBAAsBC,SAtBvD,SAACC,GACpBZ,EAASY,EAAEC,OAAOC,QAqBgFC,UAAQ,EAACC,WAAS,IAClH,wBAAQC,QAnBS,SAACL,GACpBA,EAAEM,iBACF,uCAAC,sBAAAC,EAAA,sEACO3B,EAAI4B,IAAI,QAAS,CACrBC,OAAQ,CAACpB,GAAIF,KACVuB,MAAK,SAAAC,GACqB,SAAvBA,EAASC,KAAKf,MAA0C,SAAvBc,EAASC,KAAKf,OACjDP,EAAMqB,EAASC,KAAKvB,IACpBG,EAAWmB,EAASC,KAAKC,iBACzBnB,EAAWiB,EAASC,KAAKnB,aAPhC,2CAAD,wDAiBE,2BACA,sBAAKG,UAAU,SAAf,UACA,4CADA,IACoBP,EADpB,IACwB,uBACxB,sCAFA,IAEcE,EAFd,IAEwBE,WCxBfqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1367c933.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst API = axios.create({\r\n    baseURL: \"https://ip-geolocation-ipwhois-io.p.rapidapi.com\",\r\n    headers: {\r\n        'x-rapidapi-host': 'ip-geolocation-ipwhois-io.p.rapidapi.com',\r\n        'x-rapidapi-key': '2cc4f9fb5fmsh6c7c17f151bdaa1p1f3fb7jsne9ae56177c97'\r\n        }\r\n});\r\n\r\nexport default API;","import API from './API';\nimport {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [input, setInput] = useState();\n  const [ip, setIp] = useState(\"\");\n  const [capital, setCapital] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    (async function getData() {\n      await API.get(\"json/\", {\n        params: {ip: input}\n        }).then(response => {\n          if (response.data.type === \"IPv4\" || response.data.type === \"IPv6\") {\n            setIp(response.data.ip);\n            setCapital(response.data.country_capital);\n            setCountry(response.data.country);\n        }\n      })\n    })();\n  }\n\n  return (<div id=\"parent\">\n    <div className=\"App\">\n      <h2>Find Location of IP Address</h2>\n      Enter IP address: <input type=\"text\" placeholder= \"IPv4 or IPv6 format\" onChange={handleChange} required autoFocus/>\n      <button onClick={handleSubmit}>Find Location</button>\n      <div className=\"output\">\n      <b>IP address:</b> {ip} <br/>\n      <b>Area:</b> {capital} {country}\n      </div>\n    </div>\n    </div>);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}